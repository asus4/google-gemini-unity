#nullable enable

using System;
using System.Text.Json.Serialization;

namespace GoogleApis.GenerativeLanguage
{
    /// <summary>
    /// A response candidate generated from the model.
    /// 
    /// https://ai.google.dev/api/generate-content#v1beta.Candidate
    /// </summary>
    public partial record Candidate
    {
        /// <summary>
        /// Output only. Generated content returned from the model.
        /// </summary>
        [JsonPropertyName("content")]
        public Content Content { get; set; }

        /// <summary>
        /// Optional. Output only. The reason why the model stopped generating tokens.
        /// If empty, the model has not stopped generating tokens.
        /// </summary>
        [JsonPropertyName("finishReason")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public FinishReason? FinishReason { get; set; }

        /// <summary>
        /// List of ratings for the safety of a response candidate.
        /// There is at most one rating per category.
        /// </summary>
        [JsonPropertyName("safetyRatings")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public SafetyRating[]? SafetyRatings { get; set; }

        /// <summary>
        /// Output only. Citation information for model-generated candidate.
        /// This field may be populated with recitation information for any text included in the content. These are passages that are "recited" from copyrighted material in the foundational LLM's training data.
        /// </summary>
        [JsonPropertyName("citationMetadata")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public CitationMetadata? CitationMetadata;

        /// <summary>
        /// Output only. Token count for this candidate.
        /// </summary>
        [JsonPropertyName("tokenCount")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public int? TokenCount { get; set; }

        /// <summary>
        /// Output only. Attribution information for sources that contributed to a grounded answer.
        /// This field is populated for GenerateAnswer calls.
        /// </summary>
        [JsonPropertyName("groundingAttributions")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public GroundingAttribution[]? GroundingAttributions { get; set; }

        /// <summary>
        /// Output only. Grounding metadata for the candidate.
        /// This field is populated for GenerateContent calls.
        /// </summary>
        [JsonPropertyName("groundingMetadata")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public GroundingMetadata? GroundingMetadata { get; set; }

        /// <summary>
        /// Output only. Average log probability score of the candidate.
        /// </summary>
        [JsonPropertyName("avgLogprobs")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public float? AvgLogprobs { get; set; }

        /// <summary>
        /// Output only. Log-likelihood scores for the response tokens and top tokens
        /// </summary>
        [JsonPropertyName("logprobsResult")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public float? LogprobsResult { get; set; }

        [JsonPropertyName("index")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public int? Index { get; set; }

        public Candidate(Content content)
        {
            Content = content;
        }
    }

    /// <summary>
    /// Defines the reason why the model stopped generating tokens.
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter))]
    public enum FinishReason
    {
        FINISH_REASON_UNSPECIFIED, // Default value. This value is unused.
        STOP, // Natural stop point of the model or provided stop sequence.
        MAX_TOKENS, // The maximum number of tokens as specified in the request was reached.
        SAFETY, // The candidate content was flagged for safety reasons.
        RECITATION, // The candidate content was flagged for recitation reasons.
        OTHER, // Unknown reason.
        BLOCKLIST, // Token generation stopped because the content contains forbidden terms.
        PROHIBITED_CONTENT, // Token generation stopped for potentially containing prohibited content.
        SPII, // Token generation stopped because the content potentially contains Sensitive Personally Identifiable Information (SPII).
        MALFORMED_FUNCTION_CALL, // The function call generated by the model is invalid.
        IMAGE_SAFETY, // Token generation stopped because generated images contain safety violations.
    }

    /// <summary>
    /// Attribution for a source that contributed to an answer.
    /// https://ai.google.dev/api/generate-content#GroundingAttribution
    /// </summary>
    public record GroundingAttribution
    {
        /// <summary>
        /// Output only. Identifier for the source contributing to this attribution.
        /// </summary>
        [JsonPropertyName("sourceId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public AttributionSourceId? SourceId { get; set; }

        /// <summary>
        /// Grounding source content that makes up this attribution.
        /// </summary>
        [JsonPropertyName("content")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public Content? Content { get; set; }
    }

    /// <summary>
    /// Identifier for the source contributing to this attribution.
    /// </summary>
    public record AttributionSourceId
    {
        /// <summary>
        /// Identifier for an inline passage.
        /// </summary>
        [JsonPropertyName("groundingPassage")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public GroundingPassageId? GroundingPassage { get; set; }

        /// <summary>
        /// Identifier for a Chunk fetched via Semantic Retriever.
        /// </summary>
        [JsonPropertyName("semanticRetrieverChunk")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public SemanticRetrieverChunk? SemanticRetrieverChunk { get; set; }
    }

    /// <summary>
    /// Identifier for a part within a GroundingPassage.
    /// </summary>
    public record GroundingPassageId
    {
        /// <summary>
        /// Output only. ID of the passage matching the GenerateAnswerRequest's GroundingPassage.id.
        /// </summary>
        [JsonPropertyName("passageId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

        public string? PassageId { get; set; }

        /// <summary>
        /// Output only. Index of the part within the GenerateAnswerRequest's GroundingPassage.content.
        /// </summary>
        [JsonPropertyName("partIndex")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public int? PartIndex { get; set; }
    }

    /// <summary>
    /// Identifier for a Chunk retrieved via Semantic Retriever specified in the GenerateAnswerRequest using SemanticRetrieverConfig.
    /// </summary>
    public record SemanticRetrieverChunk
    {
        /// <summary>
        /// Output only. Name of the source matching the request's SemanticRetrieverConfig.source. Example: corpora/123 or corpora/123/documents/abc
        /// </summary>
        [JsonPropertyName("source")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public string? Source { get; set; }

        /// <summary>
        /// Output only. Name of the Chunk containing the attributed text. Example: corpora/123/documents/abc/chunks/xyz
        /// </summary>
        [JsonPropertyName("chunk")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public string? Chunk { get; set; }
    }

    /// <summary>
    /// Metadata returned to client when grounding is enabled.
    /// https://ai.google.dev/api/generate-content#GroundingAttribution
    /// </summary>
    public record GroundingMetadata
    {
        // public GroundingChunk[]? GroundingChunks { get; set; }
        // public GroundingSupport[]? GroundingSupports { get; set; }

        /// <summary>
        /// Web search queries for the following-up web search.
        /// </summary>
        [JsonPropertyName("webSearchQueries")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public string[]? WebSearchQueries { get; set; }

        [JsonPropertyName("searchEntryPoint")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public SearchEntryPoint? SearchEntryPoint { get; set; }

        [JsonPropertyName("retrievalMetadata")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public RetrievalMetadata? RetrievalMetadata { get; set; }
    }

    /// <summary>
    /// Google search entry point.
    /// https://ai.google.dev/api/generate-content#SearchEntryPoint
    /// </summary>
    /// <value></value>
    public record SearchEntryPoint
    {
        /// <summary>
        /// Optional. Web content snippet that can be embedded in a web page or an app webview.
        /// </summary>
        [JsonPropertyName("renderedContent")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public string? RenderedContent { get; set; }

        [JsonPropertyName("sdkBlob")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public ReadOnlyMemory<byte>? SdkBlob { get; set; }
    }

    /// <summary>
    /// Metadata related to retrieval in the grounding flow.
    /// https://ai.google.dev/api/generate-content#RetrievalMetadata
    /// </summary>
    public record RetrievalMetadata
    {
        /// <summary>
        /// Optional. Score indicating how likely information from google search could help answer the prompt. The score is in the range [0, 1], where 0 is the least likely and 1 is the most likely. This score is only populated when google search grounding and dynamic retrieval is enabled. It will be compared to the threshold to determine whether to trigger google search.
        /// </summary>
        [JsonPropertyName("googleSearchDynamicRetrievalScore")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public double? GoogleSearchDynamicRetrievalScore { get; set; }
    }
}
